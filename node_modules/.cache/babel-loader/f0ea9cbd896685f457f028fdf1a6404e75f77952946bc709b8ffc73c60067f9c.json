{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\react\\\\myapp\\\\src\\\\johnny.js\";\n// import John from \"./john\";\n\n// let red=\"red\"\n// let gre=\"green\"\n// let on=\"ON\"\n// let of=\"OFF\"\n// function Johnny(){\n//     return(\n//         <div>\n//             {/* <h1>Prakashraj</h1> */}\n//             <John red={red} gre={gre} on={on} off={of}/>\n//         </div>\n//     )\n// }\n\n// export default Johnny;\n\nimport John from \"./john\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet a = \"Because narrative paragraphs resemble fiction (an untrue story), you have a little more freedom to write the story in the style you prefer. This is known as artistic freedom or artistic license. You can use the first-person narrative style and include words that clearly refer to you (I, me, my, mine, etc.), or you can try to tell the story from a purely objective point of view that is not personal but gives a straight-forward, factual account of what happened\";\nlet b = \"\";\nlet c = \"On\";\nlet d = \"Off\";\nfunction Johnny() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(John, {\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = Johnny;\nexport default Johnny;\n\n// import John from \"./john\"\n\n// let red=\"red\"\n// let blue=\"blue\"\n// let on=\"ON\"\n// let of=\"Off\"\n\n// function Johnny(){\n//     return(\n//         <div>\n//             <John red={red} blue={blue} on={on} of={of}/>\n//         </div>\n//     )\n// }\n\n// export default Johnny;\nvar _c;\n$RefreshReg$(_c, \"Johnny\");","map":{"version":3,"names":["John","jsxDEV","_jsxDEV","a","b","c","d","Johnny","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/react/myapp/src/johnny.js"],"sourcesContent":["// import John from \"./john\";\r\n\r\n\r\n// let red=\"red\"\r\n// let gre=\"green\"\r\n// let on=\"ON\"\r\n// let of=\"OFF\"\r\n// function Johnny(){\r\n//     return(\r\n//         <div>\r\n//             {/* <h1>Prakashraj</h1> */}\r\n//             <John red={red} gre={gre} on={on} off={of}/>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Johnny;\r\n\r\n\r\n\r\nimport John from \"./john\";\r\nlet a=\"Because narrative paragraphs resemble fiction (an untrue story), you have a little more freedom to write the story in the style you prefer. This is known as artistic freedom or artistic license. You can use the first-person narrative style and include words that clearly refer to you (I, me, my, mine, etc.), or you can try to tell the story from a purely objective point of view that is not personal but gives a straight-forward, factual account of what happened\"\r\nlet b=\"\"\r\nlet c=\"On\"\r\nlet d=\"Off\"\r\nfunction Johnny(){\r\n    return(\r\n         <div>\r\n            <John a={a} b={b} c={c} d={d}/>\r\n         </div>\r\n    )\r\n}\r\n \r\nexport default Johnny;\r\n\r\n\r\n\r\n// import John from \"./john\"\r\n\r\n// let red=\"red\"\r\n// let blue=\"blue\"\r\n// let on=\"ON\"\r\n// let of=\"Off\"\r\n\r\n// function Johnny(){\r\n//     return(\r\n//         <div>\r\n//             <John red={red} blue={blue} on={on} of={of}/>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Johnny;"],"mappings":";AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,IAAIC,CAAC,GAAC,idAAid;AACvd,IAAIC,CAAC,GAAC,EAAE;AACR,IAAIC,CAAC,GAAC,IAAI;AACV,IAAIC,CAAC,GAAC,KAAK;AACX,SAASC,MAAMA,CAAA,EAAE;EACb,oBACKL,OAAA;IAAAM,QAAA,eACGN,OAAA,CAACF,IAAI;MAACG,CAAC,EAAEA,CAAE;MAACC,CAAC,EAAEA,CAAE;MAACC,CAAC,EAAEA,CAAE;MAACC,CAAC,EAAEA;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEf;AAACC,EAAA,GANQN,MAAM;AAQf,eAAeA,MAAM;;AAIrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}